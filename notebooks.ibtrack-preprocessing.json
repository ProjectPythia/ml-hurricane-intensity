{"version":2,"kind":"Notebook","sha256":"8ac6032f9269bb610452db787bc67a6d3a9a2c5044ab89c550a2f2729d306f73","slug":"notebooks.ibtrack-preprocessing","location":"/notebooks/ibtrack_preprocessing.ipynb","dependencies":[],"frontmatter":{"title":"Preprocess IBTRACK data","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Nirmal Alex, Matthew Lynne","given":"Matthew Lynne","family":"Nirmal Alex"},"name":"Nirmal Alex, Matthew Lynne","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/ProjectPythia/ml-hurricane-intensity","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/ProjectPythia/ml-hurricane-intensity/blob/main/notebooks/ibtrack_preprocessing.ipynb","thumbnail":"/ml-hurricane-intensity/build/2-Scenarios-used-by--355060be0ffdbad906f57319b6eca882.jpg","exports":[{"format":"ipynb","filename":"ibtrack_preprocessing.ipynb","url":"/ml-hurricane-intensity/build/ibtrack_preprocessin-aff7b3a48dcc2d544f120a9c55acf1c0.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"image","url":"/ml-hurricane-intensity/build/2-Scenarios-used-by--355060be0ffdbad906f57319b6eca882.jpg","alt":"Hurricane Spaghetti Model Tracks (https://smartcorp.com/blog/what-silicon-valley-bank-can-learn-from-supply-chain-planning/attachment/2-scenarios-used-by-the-national-weather-service-to-predict-hurricane-tracks/)","width":"300px","align":"center","key":"SnGltAaES9","urlSource":"../2-Scenarios-used-by-the-National-Weather-Service-to-predict-hurricane-tracks.jpg"}],"key":"u9MON6CW3o"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gon6Fpn4fE"}],"key":"GJcqFKrj4n"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ARsV6Cc1Lj"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"QBZn3dDkEO"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The first step of any machine learning algorithm is to first load in, filter, and then process the necessary data. Here, we will load in the hurricane track data from IBTRACKS and then filter the tracks by requirements that we will set.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zeTpvfqksZ"}],"key":"yprkpoOMdk"}],"key":"YKgbYC009P"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hHQAxAAO0j"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"fozmXZP5fC"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ulZ7vaCCOx"}],"key":"BpY1UWUEs0"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xOlnM3Hee7"}],"key":"iJMz0VNSFE"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JzyX4t1g8X"}],"key":"ZLqVltWOrY"}],"key":"dWf01SLkUQ"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to NUMPY","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UWSjJNWd8O"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/","key":"Dc7T7aLaQY"}],"key":"RU2bXDXVIe"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kMBwU0A7rN"}],"key":"HoXnDz7v9x"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"qiw8vBV777"}],"key":"s4WqA7pcWt"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intro to PANDAS","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"T6DTcc9eWv"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/","key":"ifevuCm7qH"}],"key":"BPArjJqCMb"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"OdngQhng72"}],"key":"I435Kl1Csj"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[],"key":"TiVg01kMcs"}],"key":"cxKrgRzSOd"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to XARRAY","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IpobAq7hQq"}],"urlSource":"https://foundations.projectpythia.org/core/xarray/","key":"iSV8UAYuIz"}],"key":"EbETiT4hZP"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UWx2YPXU3F"}],"key":"WYPjoiycd7"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[],"key":"Jcdq2QgxSl"}],"key":"hrcbqJv7wy"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Project management","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"B3SNt4iMHH"}],"key":"nFplWJGOnw"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"wSGNupMFf7"}],"key":"DtdwxjSKrc"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[],"key":"DpPZoYaX0P"}],"key":"Z2cD1akLhj"}],"key":"pRx263HlYV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cD8McRhuBq"}],"key":"LAXKZd7N3E"},{"type":"text","value":": estimate in minutes. For a rough idea, use 5 mins per subsection, 10 if longer; add these up for a total. Safer to round up and overestimate.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"kdoOP1JQIM"}],"key":"JIHGaP3vJE"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"System requirements","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"qi5PEdVYhE"}],"key":"tKBJVqyLbo"},{"type":"text","value":":","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"iqhTvbDgfO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Populate with any system, version, or non-Python software requirements if necessary","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"WIMkKgflNr"}],"key":"S3sbKEpUfl"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Otherwise use the concepts table above and the Imports section below to describe required packages as necessary","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"LkwraTFfcC"}],"key":"NpVmIouBCJ"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"If no extra requirements, remove the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"GOePyDHARV"},{"type":"strong","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"System requirements","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"BMCiQFWxQH"}],"key":"EudihKsh4J"},{"type":"text","value":" point altogether","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"G4UoEo55LV"}],"key":"MyfgkntkjM"}],"key":"y97z4smj89"}],"key":"qbC1Wrl9hK"}],"key":"K7LMDNEKo2"}],"key":"BBbHkykV0V"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MU7CW0Z5Vd"}],"key":"mWRINqJiQQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ClWAg7fNkl"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"wnHbzNP54p"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Begin your body of content with another ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"H18iMwSQqb"},{"type":"inlineCode","value":"---","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Gc5E7HEAYD"},{"type":"text","value":" divider before continuing into this section, then remove this body text and populate the following code cell with all necessary Python imports ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Zqji02OyNW"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"up-front","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SgyHxWQUer"}],"key":"J0jaOi3s85"},{"type":"text","value":":","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XHEjOXAnsp"}],"key":"uD6wHpqX7o"}],"key":"baFFsUc0PU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr \nfrom dask.distributed import Client\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport pandas as pd\nimport glob\nfrom global_land_mask import globe\nimport cartopy.feature as cfeature\nfrom matplotlib.path import Path\nimport matplotlib.patches as patches\nfrom matplotlib import patheffects","key":"iypuzZLzD2"},{"type":"output","id":"tJM2k-OYmLxOylU7SgHlb","data":[],"key":"xnnGpATAs5"}],"key":"uOO0o5KFDd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in IBTRACKS data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f3b4frYpPK"}],"identifier":"read-in-ibtracks-data","label":"Read in IBTRACKS data","html_id":"read-in-ibtracks-data","implicit":true,"key":"bjIz4lDn39"}],"key":"oAoHuGvcj7"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, read in the data as a csv file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fOy5iLNHYx"}],"key":"xSxDfNiBON"}],"key":"BmDuKkoGsl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ib_data = '~/ml-hurricane-intensity/test_folder/ibtracs.NA.list.v04r00.csv'","key":"u6LrU1l9Pc"},{"type":"output","id":"4TSJe7vZRIJuT-1HI7VF2","data":[],"key":"pB1ZFseFNo"}],"key":"uMLODFfThQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Method to preprocess the track data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u7BveCl97r"}],"identifier":"method-to-preprocess-the-track-data","label":"Method to preprocess the track data","html_id":"method-to-preprocess-the-track-data","implicit":true,"key":"y0kKCuMXGv"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The following method will set custom ranges for the time period and spatial domain of analysis.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qd0NqC7bKJ"}],"key":"JR4PBLFvIg"}],"key":"u71pObgaFW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def process_ibrack(ib_loc, periods=[2000,2005]):\n\n    #Read in the IBTRACKS data\n    read_ib_data = pd.read_csv(ib_loc,keep_default_na=False)\n    \n    #Get the units for each column in read_ib_data\n    units = read_ib_data.iloc[0,:]\n\n    #Get data or the remainder of read_ib_data\n    ib_original_dft = read_ib_data.iloc[1:,:]\n\n    #Set a custom date and time range based on user choosing\n    ib_original_dft['datetime'] = pd.to_datetime(ib_original_dft['ISO_TIME'],format='%Y-%m-%d %H:%M:%S')\n    year_mask = (ib_original_dft['datetime'] > f'{periods[0]}-1-1') & (ib_original_dft['datetime'] <= f'{periods[1]}-11-30')\n    ib_new_period = ib_original_dft[year_mask][ib_original_dft['BASIN'] == 'NA']\n\n    #Only use cyclones over the North Atlantic basin\n    #This can be changed to include more cyclones outside of the Northeast Atlantic\n    def only_na_basin(df):\n        lon_wise = df.sort_values(by='datetime')\n        if lon_wise['LON'].iloc[0] > -55:\n            return df\n        else:\n            return None\n\n    #Get the number of time steps in each cyclone, or event\n    only_neatlantic = ib_new_period.groupby('SID').apply(only_na_basin).reset_index(drop=True)\n    counts = only_neatlantic.groupby('SID').count().iloc[:,0]\n    \n    #Get cyclones that last at least 12 time steps\n    counts_12 = counts[counts > 12].index\n    persist_storms = ib_new_period[ib_new_period['SID'].isin(counts_12)]\n    persist_storms['month']= persist_storms['datetime'].dt.month\n    \n    # mask out land points\n    def mask_lands(df):\n        ordered_df = df.sort_values(by='datetime')\n        lat = ordered_df['LAT']\n        lon = ordered_df['LON']\n        ocean_mask = pd.Series(globe.is_ocean(lat=lat,lon=lon))\n        idx_false = ocean_mask.idxmin()\n        if idx_false == 0:\n            return df\n        else:\n            land_mask = ocean_mask.iloc[:idx_false]\n            final_masked = ordered_df.iloc[:idx_false,:]\n            return final_masked\n   \n    # filter extratropical parts of the storm tracks\n    def filter_ET(df):\n        ordered_df = df.sort_values(by='datetime')\n        lat_filter = ordered_df['LAT'] <= 35\n        filter_df = ordered_df[lat_filter]\n        return filter_df\n    \n    exclude_et = persist_storms.groupby('SID').apply(filter_ET).reset_index(drop=True)\n\n    final_dft = exclude_et.groupby('SID').apply(mask_lands).reset_index(drop=True)\n\n    return final_dft","key":"gGP5ohxmMw"},{"type":"output","id":"WPeqn9Mw2lmgs06GfFqF7","data":[],"key":"WzBh9fYHko"}],"key":"LCuqG8liNv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Process IBTRACKS data using the above methods","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p8E0PNTEqc"}],"identifier":"process-ibtracks-data-using-the-above-methods","label":"Process IBTRACKS data using the above methods","html_id":"process-ibtracks-data-using-the-above-methods","implicit":true,"key":"srwNz63buQ"}],"key":"n2UfGBgAIw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ib_data_processed = process_ibrack(ib_data,periods=[2000,2005])\nib_data_processed['LAT'] = ib_data_processed['LAT'].astype(float)\nib_data_processed['LON'] = ib_data_processed['LON'].astype(float)\nib_data_processed['USA_WIND'] = ib_data_processed['USA_WIND'].astype(float)\nib_data_processed['datetime'] = pd.to_datetime(ib_data_processed['datetime'],format='%Y-%m-%d %H:%M:%S')\nib_data_processed['SID'] = ib_data_processed['SID'].astype(str)","key":"kFYnyqwAEs"},{"type":"output","id":"bMU_HHmCqqmVTwMZJbPUU","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mFileNotFoundError\u001b[39m                         Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[4]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m ib_data_processed = \u001b[43mprocess_ibrack\u001b[49m\u001b[43m(\u001b[49m\u001b[43mib_data\u001b[49m\u001b[43m,\u001b[49m\u001b[43mperiods\u001b[49m\u001b[43m=\u001b[49m\u001b[43m[\u001b[49m\u001b[32;43m2000\u001b[39;49m\u001b[43m,\u001b[49m\u001b[32;43m2005\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m      2\u001b[39m ib_data_processed[\u001b[33m'\u001b[39m\u001b[33mLAT\u001b[39m\u001b[33m'\u001b[39m] = ib_data_processed[\u001b[33m'\u001b[39m\u001b[33mLAT\u001b[39m\u001b[33m'\u001b[39m].astype(\u001b[38;5;28mfloat\u001b[39m)\n\u001b[32m      3\u001b[39m ib_data_processed[\u001b[33m'\u001b[39m\u001b[33mLON\u001b[39m\u001b[33m'\u001b[39m] = ib_data_processed[\u001b[33m'\u001b[39m\u001b[33mLON\u001b[39m\u001b[33m'\u001b[39m].astype(\u001b[38;5;28mfloat\u001b[39m)\n\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[3]\u001b[39m\u001b[32m, line 4\u001b[39m, in \u001b[36mprocess_ibrack\u001b[39m\u001b[34m(ib_loc, periods)\u001b[39m\n\u001b[32m      1\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mprocess_ibrack\u001b[39m(ib_loc, periods=[\u001b[32m2000\u001b[39m,\u001b[32m2005\u001b[39m]):\n\u001b[32m      2\u001b[39m \n\u001b[32m      3\u001b[39m     \u001b[38;5;66;03m#Read in the IBTRACKS data\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m4\u001b[39m     read_ib_data = \u001b[43mpd\u001b[49m\u001b[43m.\u001b[49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mib_loc\u001b[49m\u001b[43m,\u001b[49m\u001b[43mkeep_default_na\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[32m      6\u001b[39m     \u001b[38;5;66;03m#Get the units for each column in read_ib_data\u001b[39;00m\n\u001b[32m      7\u001b[39m     units = read_ib_data.iloc[\u001b[32m0\u001b[39m,:]\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-dev/lib/python3.12/site-packages/pandas/io/parsers/readers.py:1026\u001b[39m, in \u001b[36mread_csv\u001b[39m\u001b[34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[39m\n\u001b[32m   1013\u001b[39m kwds_defaults = _refine_defaults_read(\n\u001b[32m   1014\u001b[39m     dialect,\n\u001b[32m   1015\u001b[39m     delimiter,\n\u001b[32m   (...)\u001b[39m\u001b[32m   1022\u001b[39m     dtype_backend=dtype_backend,\n\u001b[32m   1023\u001b[39m )\n\u001b[32m   1024\u001b[39m kwds.update(kwds_defaults)\n\u001b[32m-> \u001b[39m\u001b[32m1026\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-dev/lib/python3.12/site-packages/pandas/io/parsers/readers.py:620\u001b[39m, in \u001b[36m_read\u001b[39m\u001b[34m(filepath_or_buffer, kwds)\u001b[39m\n\u001b[32m    617\u001b[39m _validate_names(kwds.get(\u001b[33m\"\u001b[39m\u001b[33mnames\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[32m    619\u001b[39m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m620\u001b[39m parser = \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    622\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[32m    623\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-dev/lib/python3.12/site-packages/pandas/io/parsers/readers.py:1620\u001b[39m, in \u001b[36mTextFileReader.__init__\u001b[39m\u001b[34m(self, f, engine, **kwds)\u001b[39m\n\u001b[32m   1617\u001b[39m     \u001b[38;5;28mself\u001b[39m.options[\u001b[33m\"\u001b[39m\u001b[33mhas_index_names\u001b[39m\u001b[33m\"\u001b[39m] = kwds[\u001b[33m\"\u001b[39m\u001b[33mhas_index_names\u001b[39m\u001b[33m\"\u001b[39m]\n\u001b[32m   1619\u001b[39m \u001b[38;5;28mself\u001b[39m.handles: IOHandles | \u001b[38;5;28;01mNone\u001b[39;00m = \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m1620\u001b[39m \u001b[38;5;28mself\u001b[39m._engine = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-dev/lib/python3.12/site-packages/pandas/io/parsers/readers.py:1880\u001b[39m, in \u001b[36mTextFileReader._make_engine\u001b[39m\u001b[34m(self, f, engine)\u001b[39m\n\u001b[32m   1878\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[32m   1879\u001b[39m         mode += \u001b[33m\"\u001b[39m\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m-> \u001b[39m\u001b[32m1880\u001b[39m \u001b[38;5;28mself\u001b[39m.handles = \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   1881\u001b[39m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1882\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1883\u001b[39m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mencoding\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1884\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mcompression\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1885\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mmemory_map\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1886\u001b[39m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[43m=\u001b[49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1887\u001b[39m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mencoding_errors\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mstrict\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1888\u001b[39m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mstorage_options\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1889\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1890\u001b[39m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m.handles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[32m   1891\u001b[39m f = \u001b[38;5;28mself\u001b[39m.handles.handle\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-dev/lib/python3.12/site-packages/pandas/io/common.py:873\u001b[39m, in \u001b[36mget_handle\u001b[39m\u001b[34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[39m\n\u001b[32m    868\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[32m    869\u001b[39m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[32m    870\u001b[39m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[32m    871\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m ioargs.encoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs.mode:\n\u001b[32m    872\u001b[39m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m873\u001b[39m         handle = \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[32m    874\u001b[39m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    875\u001b[39m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    876\u001b[39m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m=\u001b[49m\u001b[43mioargs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    877\u001b[39m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m=\u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    878\u001b[39m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m    879\u001b[39m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    880\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    881\u001b[39m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[32m    882\u001b[39m         handle = \u001b[38;5;28mopen\u001b[39m(handle, ioargs.mode)\n\n\u001b[31mFileNotFoundError\u001b[39m: [Errno 2] No such file or directory: '/home/runner/ml-hurricane-intensity/test_folder/ibtracs.NA.list.v04r00.csv'","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/home/runner/ml-hurricane-intensity/test_folder/ibtracs.NA.list.v04r00.csv'"}],"key":"ze9Pb0f2EV"}],"key":"zVXG560p31"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Organize the edited IBTRACKS file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HPocbWzBfz"}],"identifier":"organize-the-edited-ibtracks-file","label":"Organize the edited IBTRACKS file","html_id":"organize-the-edited-ibtracks-file","implicit":true,"key":"dxug4obYCq"}],"key":"aJyUVh8U1z"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"hint","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"UMG4vvwE65"}],"key":"ceQgXEV5Xz"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Up until now, we have primarily been grouping the IBTRACKS data using SID. Starting in this block, we will begin grouping the IBTRACKS data by id. This is done since SID may erroneously connect some cyclone tracks at adjacent time steps, while id appears to keep them separate.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"X0X8m3ExoU"}],"key":"Dumr45vcrK"}],"key":"VXadBz5Pa4"}],"key":"b979L5jSrV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ib_data_processed['id'] = ib_data_processed['SID'].astype('category')\nib_data_processed['id'] = ib_data_processed['id'].cat.codes\nreq_cols = ['datetime','LAT','LON','USA_WIND','id']\n\n# groupby datetime 6h \nib_data_processed['datetime'] = ib_data_processed['datetime'].dt.floor('6h')\n\nib_data_processed_6h = ib_data_processed[req_cols].groupby('datetime').mean().reset_index()\n\n# copy the SID based on the id\n\nib_data_processed_6h['SID'] = ib_data_processed.groupby('datetime')['SID'].first().values","key":"VSism8Wkcu"},{"type":"output","id":"DnSm_elAolZw6i4FqxBh3","data":[],"key":"k53a67PvSD"}],"key":"oiQEBVSGlW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"See the organized and edited IBTRACKS file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wiUMprsfzo"}],"identifier":"see-the-organized-and-edited-ibtracks-file","label":"See the organized and edited IBTRACKS file","html_id":"see-the-organized-and-edited-ibtracks-file","implicit":true,"key":"uaKMcE7hRS"}],"key":"U9JIFGvekJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ib_data_processed_6h","key":"LAQmDa7lqg"},{"type":"output","id":"3D7do_oUfAwkts-dEsax_","data":[],"key":"yd6JswxuX8"}],"key":"skKH4re8QF"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the track data we have edited and organized","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GfGiB0PmIo"}],"identifier":"plot-the-track-data-we-have-edited-and-organized","label":"Plot the track data we have edited and organized","html_id":"plot-the-track-data-we-have-edited-and-organized","implicit":true,"key":"bgreOkXJgy"}],"key":"lzlGsVx4FL"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"V4hH6iSJOp"}],"key":"G8GvaOtFbi"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"You may notice some instances in which the cyclone track hits the top of the boundary, and then appears to erroneously move horizontally over a long distance. Not to worry! This occurs since we discount all cyclones that move north of our boundary. Thus, the plot below will connect the two cyclone positions before and after it leaves the domain. The data is however correct.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fGzDHJo9ZR"}],"key":"nDR7kXYoC5"}],"key":"sTvcxMmkhs"}],"key":"dr8c3K7bQ1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_tracks(filtered_ib):\n    filtered_ib['datetime'] = pd.to_datetime(filtered_ib['datetime'])\n\n    events = filtered_ib.groupby('id')\n    \n    fig,ax = plt.subplots(figsize=(20,10),subplot_kw={\"projection\": ccrs.PlateCarree()})\n    \n    ax.add_feature(cfeature.COASTLINE)\n\n    ax.add_feature(cfeature.BORDERS)\n\n\n    ax.coastlines()\n    \n    ax.add_feature(cfeature.LAND)\n    ax.add_feature(cfeature.OCEAN)\n    \n    ax.gridlines(draw_labels=True, dms=True, x_inline=False, y_inline=False)\n  \n    for event_num , event in events:\n        lon = event['LON'].values\n        lat = event['LAT'].values\n\n        vertices = [(lo, la) for lo, la in zip(lon, lat)]\n        codes = [Path.MOVETO]\n        [codes.append(Path.LINETO) for index in range(0, len(event) - 1)]\n\n        path = Path(vertices, codes)\n        \n        patch = patches.PathPatch(path, lw = 1, fc = 'none', path_effects = [patheffects.withStroke(linewidth=2.5, foreground=\"black\")], zorder = 5)\n\n        ax.add_patch(patch)\n        \n        ax.set_xlim(-100, 0)\n        ax.set_ylim(5, 35)\n    return fig,ax\n\nplot_tracks(ib_data_processed_6h)","key":"KNMuPCDkOv"},{"type":"output","id":"yeCSrSRucJ-X-f41sdKLG","data":[],"key":"qzUidoXNPo"}],"key":"cpaUpJufjx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ib_data_processed_6h.to_csv('../test_folder/ib_data_processed_6h.csv')","key":"ZhaumzHlJ8"},{"type":"output","id":"3qB7r-I06TgQKqt0QGQfQ","data":[],"key":"j2X1MaFDGo"}],"key":"bB2zSn6L2H"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aYmZhoZeaI"}],"key":"Aes7njewHH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ON7Hm2kwbW"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"UCmXa6y1iW"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Here, we appropriately edited the cyclone track data over our space and time domain of interest. We have also created an output file that will be useful for eventual creation and training of our machine learning model.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Aoiu6619my"}],"key":"az7XelLGwM"},{"type":"heading","depth":3,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"What’s next?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rFlk9CGaVr"}],"identifier":"whats-next","label":"What’s next?","html_id":"whats-next","implicit":true,"key":"APTj6pkVfS"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Next we will edit the ERA5 data. In particular, we will take our variables of interest that will be used to train the AI model and organize them for ingestion into the machine learning model.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Njr1FT1F7Q"}],"key":"LDPo0Sve3t"}],"key":"GdgXLOvcSz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pPtucVr7eg"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"Z3RRMoW0OP"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Image link: ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bFXDtElWjO"},{"type":"link","url":"https://smartcorp.com/blog/what-silicon-valley-bank-can-learn-from-supply-chain-planning/attachment/2-scenarios-used-by-the-national-weather-service-to-predict-hurricane-tracks/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"https://​smartcorp​.com​/blog​/what​-silicon​-valley​-bank​-can​-learn​-from​-supply​-chain​-planning​/attachment​/2​-scenarios​-used​-by​-the​-national​-weather​-service​-to​-predict​-hurricane​-tracks/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YwOT7SsRre"}],"urlSource":"https://smartcorp.com/blog/what-silicon-valley-bank-can-learn-from-supply-chain-planning/attachment/2-scenarios-used-by-the-national-weather-service-to-predict-hurricane-tracks/","key":"AMEN8H2QAH"}],"key":"lIkODFn7fG"}],"key":"h9I9RBYurA"}],"key":"eMookYz3qz"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"How to Cite This Cookbook","url":"/notebooks/how-to-cite","group":"Preamble"},"next":{"title":"ERA5 Data Preprocessing","url":"/notebooks/era5-preprocessing","group":"Data Preprocessing"}}},"domain":"http://localhost:3000"}